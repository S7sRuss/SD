@.str = private constant [4 x i8] c"%d\0A\00", align 1 ; <[4 x i8]*> [#uses=1]

%struct.var_type = type { i32, %union.anon }
%union.anon = type { %struct.var_type* }

define i32 @main() nounwind {
entry:
New none
  br label %bb0

bb0:
Get none
  br label %bb7

bb7:
  %2 = icmp eq i32 %1, 10
  br label %bb6

bb6:
  %3 = xor i1 1, %2
  br label %bb3

bb4:
Get none
  br label %bb12

bb12:
  %5 = add i32 %4, 1
  br label %bb11

bb11:
Set none
  br label %bb5

bb3:
  br i1 %3, label %bb4, label %bb2

bb5:
  br label %bb0

bb2:
Get none
  br label %result

result:
  call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([4 x i8]* @.str, i64 0, i64 0), i32 %6) nounwind ; <i32> [#uses=0]
  ret i32 0
}

declare i32 @printf(i8*, ...) nounwind
declare %struct.var_type* @int_var_create(i32)
declare %struct.var_type* @var_var_create(%struct.var_type*)
declare i32 @int_get_var(%struct.var_type*)
declare %struct.var_type* @var_get_var(%struct.var_type*)
declare void @int_set_var(%struct.var_type*, i32)
declare void @var_set_var(%struct.var_type*, %struct.var_type*)
declare void @free_var(%struct.var_type*, %struct.var_type*)

